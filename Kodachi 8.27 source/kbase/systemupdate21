#!/bin/bash
# Script written by Warith Al Maawali  
# (c) 2022 Founder of Eagle Eye Digital Solutions
# Discord channel https://discord.gg/KEFErEx
# Twitter http://twitter.com/warith2020
# Linkedin http://www.linkedin.com/in/warith1977
# http://www.digi77.com
# http://www.om77.net
# Kodachi  OS/Software/Code are strictly protected by LICENSE terms at /home/kodachi/LICENSE
#
#
# script starts here:

cd $(dirname $0) 
source Globalconfig;

Kodachilatestversion=$(cat kodachiweb.json |jq -r .version|xargs|tr -d " \t\n\r")

print_error "Sorry this is to let you know that Kodachi $Kodachilatestversion is a major update therefore, auto-update isn't available please download a fresh ISO from the website.";
notify-send -t 8000 -i $notifyIcon "Sorry this is to let you know that Kodachi $Kodachilatestversion is a major update 
therefore, auto-update isn't available 
please download a fresh ISO from the website."; 
sleep 20;
exit 1;

#writeToJason "Yes" "systemupdating";	
sleep 6;
notify-send -t 8000 -i $notifyIcon "System packages update process will start on background now...
Please wait for further notifications..
Update process can take up to 10+ minites.";

print_error "VPN will be shutdown in 10 seconds to save bandwidth";
sleep 10;

print_good "System packages update process will start on background now...
Please wait for further notifications..
Update process can take up to 10+ minites.";

sleep 5;
notify-send -i $notifyIcon "Set VPN to OFF status";
print_good "Set VPN to OFF status..";
writeToJason "Novpn" "VPNtype";
sleep 10;

notify-send -i $notifyIcon "Running apt update..";
print_good "Running apt update..";

yes|apt update
 

notify-send -i $notifyIcon "Running apt upgrade..";
print_good "Running apt upgrade..";

yes|apt upgrade

notify-send -i $notifyIcon "Running apt fix..";
print_good "Running apt fix..";

yes|dpkg --configure -a;
yes|apt --fix-broken install

sleep 5;
notify-send -t 10000 -i $notifyIcon "System packages update completed 
Updating $OS_name files will start now
Please wait for further notifications...";
print_good "System packages update completed 
Updating $OS_name files will start now
Please wait for further notifications...";

rm -f *update-pack* 
kodachipack=$(cat $Jason_web_file_name | jq -r '.ServerFeed2[].kodachiupdatepack'|xargs);
kodachipacksha512remote=$(cat $Jason_web_file_name | jq -r '.ServerFeed2[].kodachiupdatepacksha512'|xargs);

# Pre download commands
notify-send -i $notifyIcon "Running extra updates script systemupdate20..";	
print_good "Running extra updates script systemupdate20..";    
sudo bash systemupdate20;
sleep 2;

notify-send -i $notifyIcon "Downloading $OS_name update package..";
print_good "Downloading $OS_name update package..";
if(sudo timeout 900 wget "$kodachipack" -q)
then
	
	
	
	notify-send -i $notifyIcon "SHA512 checksum verification...";
	kodachipacksha512local=$(sha512sum update-pack*.zip|cut -d " " -f 1);
	if [[ $kodachipacksha512local == $kodachipacksha512remote ]]
	then
	    sleep 2
	    notify-send -i $notifyIcon "$OS_name SHA512 checksum passed...";	
	    print_good "$OS_name SHA512 checksum passed...";	
		sleep 2;
		notify-send -i $notifyIcon "Extracting files..";
		print_good "Extracting files..";	
		7z x *update-pack*.zip -pYDrjhKxIH5l0ZrsD7cra$@@V9E6 -o/tmp/ -y &> /dev/null;  
		sleep 2;
		notify-send -i $notifyIcon "Coping files.."; 
		print_good "Coping files.."; 	
		yes |  cp -rf /tmp/home/kodachi/Desktop/update-pack/* $Mykodachi_path;
		yes |  cp -rf /tmp/home/kodachi/Desktop/update-pack/.* $Mykodachi_path;
		sleep 2;
		
		notify-send -i $notifyIcon "Set VPN to OFF status";
		print_good "Set VPN to OFF status..";
		writeToJason "Novpn" "VPNtype";
		sleep 3;
		
		writeToJason "No" "firstboot";
		
		
		notify-send -i $notifyIcon "Running extra updates script systemupdate22..";	
		print_good "Running extra updates script systemupdate22..";    
		sleep 2;
	    # Follow up commands
		sudo bash systemupdate22;
		sleep 5;
	
		
		notify-send -i $notifyIcon "Final step cleaning files..";
		print_good "Final step cleaning files..";
		#clean up
		rm -f *update-pack*; 
		rm -f -r /tmp/home;
		rm -f wget-log		
		
		notify-send -i $notifyIcon "Set VPN to On status";
		print_good "Set VPN to On status..";
		writeToJason "Kodachi" "VPNtype";
		sleep 1;
		
		if [[ $xP == 990 ]] 
		then
			sleep 2;
			notify-send -t 10000 -i $notifyIcon "$OS_name in live mode update completed you can restart your Dashboard :)" 	 
			print_good "$OS_name in live mode update completed you can restart your Dashboard :)" 
		else
			sleep 2;
			notify-send -t 10000 -i $notifyIcon "$OS_name installed mode update completed 
You can restart your Dashboard or the OS later :)";
			print_good "$OS_name installed mode update completed 
You can restart your Dashboard or the OS later :)";
		fi
		
		
		writeToJason "No" "firstboot";
		sudo chmod 755 $Mykodachi_path/Kodachi-Dashboard.gambas;
	
	else
		 sleep 2;
		 notify-send -i $notifyIcon "$OS_name SHA512 checksum failed $OS_name files will not update...";
		 print_error "$OS_name SHA512 checksum failed $OS_name files will not update...";
		 #cd $Mykodachi_path; 
		 #writeToJason "No" "systemupdating";
		 exit ;
	fi
	 
	
	
		
else
	notify-send t 10000 -i $notifyIcon "Failed to download $OS_name updates 
Please check your internet speed or disconnect VPN or disable torrifiy then try again";
	print_error "Failed to download $OS_name updates 
Please check your internet speed or disconnect VPN or disable torrifiy then try again";
	notify-send -i $notifyIcon "Final step cleaning files..";
	print_good "Final step cleaning files..";
	rm -f *update-pack* 
	rm -f -r /tmp/home
	rm -f wget-log
fi	
	


# Do not delete this!
exit 1;
