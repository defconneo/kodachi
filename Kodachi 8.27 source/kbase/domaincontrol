#!/bin/bash
# Script written by Warith Al Maawali  
# (c) 2022 Founder of Eagle Eye Digital Solutions
# Discord channel https://discord.gg/KEFErEx
# Twitter http://twitter.com/warith2020
# Linkedin http://www.linkedin.com/in/warith1977
# http://www.digi77.com
# http://www.om77.net
# Kodachi  OS/Software/Code are strictly protected by LICENSE terms at /home/kodachi/LICENSE
#
#
# script starts here:

cd $(dirname $0) 
source Globalconfig;




while true
do
	userInput=0;
	clear;
	echo "Please choose how would you like $OS_name to retrieve the ip addresses:";
	echo "";
	print_good "1) Decentralized get them from random public websites (recommended)";
	print_good "2) Centralized get them only from digi77.com ($OS_name website)";
	print_good "3) Set a specifc domain from list or your own domain";
	print_good "4) Exit";
	echo "";
	echo "Type the number of your selection";
	read n
	case $n in
		1) userInput=1;;
		2) userInput=2;;
		3) userInput=3;;
		4) userInput=4;;
		*) print_error "sorry wrong value";sleep 1;;
	esac


	if [[ $userInput = "4" ]]
	then
		print_good "bye";
		echo "";
		exit 1;
	fi


	if [[ $userInput = "2" ]]
	then
				
		ipsourcefile==$(cat $Jason_file_name | jq -r .Ipdomainsource);
		if [[ "$ipsourcefile" == *digi77* ]]
		then
			print_good "digi77.com is already used as a domain";
						
		else
			writeToJason "digi77" "Ipdomainsource";
			sudo bash $Mykodachi_path/ipcheck digi77;
			print_good "digi77.com site will be used as a domain";
		fi				
		echo "";
		read -n 1 -s -r -p "${reset}Press any key to continue.....";
	fi


	if [[ $userInput = "1" ]]
	then
		
		ipsourcefile==$(cat $Jason_file_name | jq -r .Ipdomainsource);
		if [[ "$ipsourcefile" == *other* ]]
		then
			print_good "Other domains are already used as a domain";
			
		else
			writeToJason "other" "Ipdomainsource";
			sudo bash $Mykodachi_path/ipcheck other;
			print_good "Other sites will be used as a domain";
		fi				
		echo "";
		read -n 1 -s -r -p "${reset}Press any key to continue.....";
	fi	
	
	
	if [[ $userInput = "3" ]]
	then
		
		clear;
		if (cat $Jason_web_file_name | jq -r '.ServerFeed3.netStatusDomains[]')
		then
			echo "";
			print_good "1) Please type or paste or pick from above list a domain that will give us raw ip make sure it works with TOR as well";
			read n
			
			print_good "Testing $n if is valid";
			# Request the ip from URL 
			x=$(sudo curl --silent --fail -m 30 "$n");
			# Clean the ip
			x=$(echo $x |grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}');
			x=$(echo $x|xargs);
			# If reply is valid ip address then accept the domain
			if [[ "$x" =~ ^(([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))\.){3}([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))$ ]]; then
				print_good "Test pass for domain $n IP: $x";
				writeToJason "custom" "Ipdomainsource";
				url2=$n;
				sudo chown $LOGED_USER.$LOGED_USER $Mykodachi_path/workingdomain.txt;
				echo $url2 > $Mykodachi_path/workingdomain.txt;			
				sudo chown $LOGED_USER.$LOGED_USER $Mykodachi_path/workingdomain.txt;
				print_good "$n site will be used as a domain";
				writeToJason "1" "systemhealthactionpicker";
						
			else
				print_error "Excluding URL it does not exist: $url or ip is bad: $x"
			fi 
			
			echo "";
			read -n 1 -s -r -p "${reset}Press any key to continue.....";
		else
			print_error "Failed to get ServerFeed3.netStatusDomains from json";
		fi
	fi	
	
	

done;
