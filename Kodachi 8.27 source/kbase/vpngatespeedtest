#!/bin/bash
# Script written by Warith Al Maawali  
# (c) 2022 Founder of Eagle Eye Digital Solutions
# Discord channel https://discord.gg/KEFErEx
# Twitter http://twitter.com/warith2020
# Linkedin http://www.linkedin.com/in/warith1977
# http://www.digi77.com
# http://www.om77.net
# Kodachi  OS/Software/Code are strictly protected by LICENSE terms at /home/kodachi/LICENSE
#
#
# script starts here:

cd $(dirname $0) 
source Globalconfig;


netStatustxt=$(cat $Jason_file_name | jq -r .InternetStatus);
if [[ $netStatustxt == *Online* ]]
then

	
	toriffy_Status=$(cat $Jason_file_name | jq -r .Toriffystatus);
	if [[ "$toriffy_Status" == *No* ]]
	then
	 
		
		print_good "Race will start now fasten your seat belts â˜º";
		notify-send -i $notifyIcon "VPNGate speed test will start now";

		rm -f $Mykodachi_tmp_path/vpngatepingtest.txt;
		rm -f $Mykodachi_tmp_path/vpngatepingtest.txt.2;
		rm -f $VPN_configs_path/speedtests/vpngate_speed_test_results.txt;
		
		if [ ! -d $VPN_configs_path/speedtests ]; then
			mkdir -p $VPN_configs_path/speedtests;
			chown $LOGED_USER.$LOGED_USER $VPN_configs_path/speedtests;
		fi;

		i=1;
		servercount=$(ls $VPN_gate_ovpn_dir/*|wc -l);
		FILES=$VPN_gate_ovpn_dir/*;

		for f in $FILES
		do	     
				 
			theIP=$(cat $f|grep "^[^#;]"|grep 'remote '|awk  '{print $2}'); 
			avg=$(fping -B 1.0 -t 1000 -i 1 -r 0 -e -c 1 -q $theIP 2>&1 | awk -F'/' '{print $8}')
			f=$(echo $f| sed "s/.*\///"); 
			theCountry=$(geoiplookup $theIP|cut -d : -f 2|cut -d , -f 2|sed 's/^ *//;s/ *$//');
			echo "$f $theCountry $theIP=$avg" >> $Mykodachi_tmp_path/vpngatepingtest.txt

			# Calculate percentage of server testing process
			percentage=$((($i*100)/$servercount));
			echo -ne "${cayn}Testing $theIP server for latency using ping ($i \ $servercount) $percentage %  \033[0K\r${reset}";
			i=$((i+1));	
			
			done
				
			# Re-order and sort latency test results, save to new temp result file
			cat $Mykodachi_tmp_path/vpngatepingtest.txt | awk -F[=] '{ t=$1;$1=$2;$2=t;print; }' | sort -n > $Mykodachi_tmp_path/vpngatepingtest.txt.2

		# Save all ping result file lines to final result file as long as they start with a ping value
		while read line; do
			firstcol=$(echo $line | awk '{print $1}')
			re='^[0-9]+([.][0-9]+)?$'

			if [[ $firstcol =~ $re ]] ; then
				echo $line >> $VPN_configs_path/speedtests/vpngate_speed_test_results.txt;
			fi
		done < $Mykodachi_tmp_path/vpngatepingtest.txt.2	
		echo -e "\n";	  
		echo -e "\n${cayn}Top 10 VPNGate Servers by latency (ping)${reset}"
			echo "================================"
			cat $VPN_configs_path/speedtests/vpngate_speed_test_results.txt | sort -n | head -10 
			the10=$(cat $VPN_configs_path/speedtests/vpngate_speed_test_results.txt | sort -n | head -10 );	
		echo -e "\n";	     

		sudo chown $LOGED_USER.$LOGED_USER $Mykodachi_tmp_path/vpngatepingtest.txt.2;
		sudo chown $LOGED_USER.$LOGED_USER $Mykodachi_tmp_path/vpngatepingtest.txt;
	    fastestserver=$(cat $VPN_configs_path/speedtests/vpngate_speed_test_results.txt | head -1 | awk '{$1="";print}' | sed -e 's/^[[:space:]]*//')
		echo -e "${cayn}Fastest VPNGate server: ${green}$fastestserver\n${reset}"
		echo -e "\n";	
		print_good "VPNGate speed test results saved in:"
		print_good $VPN_configs_path/speedtests/vpngate_speed_test_results.txt; 
		echo -e "\n";	
		print_good "To use any of the above profiles change the variables in:"
		print_good $VPN_configs_path/vpngatesetup; 
		chown $LOGED_USER.$LOGED_USER $VPN_configs_path/speedtests/vpngate_speed_test_results.txt; 
		notify-send -t 30000 -i $notifyIcon "Fastest VPNGate server: 
$fastestserver

Top 10 VPNGate Servers by latency (ping):
$the10

VPNGate speed test results saved in:
$VPN_configs_path/speedtests/vpngate_speed_test_results.txt

To use any of the above profiles change the variables in:
$VPN_configs_path/vpngatesetup";

	else
		notify-send -i $notifyIcon "Please disable Torified system first then run the script again!";
		print_error "Please disable Torified system first then run the script again!";
	fi
	echo -e "\n\n";
else
	notify-send -i $notifyIcon "Please connect to Internet first!";
    exit 1;
fi

exit 1




