#!/bin/bash
# Script written by Warith Al Maawali  
# (c) 2022 Founder of Eagle Eye Digital Solutions
# Discord channel https://discord.gg/KEFErEx
# Twitter http://twitter.com/warith2020
# Linkedin http://www.linkedin.com/in/warith1977
# http://www.digi77.com
# http://www.om77.net
# Kodachi  OS/Software/Code are strictly protected by LICENSE terms at /home/kodachi/LICENSE
#
#
# script starts here:


cd $(dirname $0) 
source Globalconfig;




# Check if system is nuked or not
#getSDA=$(lsblk|egrep crypt|cut -d _ -f 1| sed 's/[^a-zA-Z0-9]//g'|head -n 1);
getSDA=$(blkid -t TYPE=crypto_LUKS|cut -d : -f 1|cut -d / -f 3|head -n 1);
All_Slots=$(cryptsetup luksDump /dev/$getSDA | grep Slot | wc -l)
Free_Slots=$(cryptsetup luksDump /dev/$getSDA | grep DISABLED | wc -l)
Used_Slots=$(cryptsetup luksDump /dev/$getSDA | grep ENABLED | wc -l)
print_good "LUKS-Slots insgesamt: $All_Slots";
print_good "Used LUKS-Slots: $Used_Slots";
print_good "Free LUKS-Slots: $Free_Slots";

#if (apt-mark showhold|grep cryptsetup-bin > /dev/null) 
#then
	
if [[ -f  $Mykodachi_path/osnukevars ]]
then
	source $Mykodachi_path/osnukevars
else
	osisnuked=0;
fi
					
#if [[ "$Used_Slots" -lt 2 ]]
if [[ $osisnuked != 1 ]]
then

	print_good "$OS_name is not nuked";

else
	print_error "$OS_name is already nuked bye..";
	notify-send -i $notifyIcon "$OS_name is already nuked";
	exit 1;
fi

#fi


#xP=$(id -u $LOGED_USER);
if [[ $xP == 1000 ]]  
then

	if(lsblk|grep _crypt> /dev/null)   
	then
		notify-send -i $notifyIcon "Starting $OS_name Nuke process";
		lsblk
		#getSDA2=$(lsblk|egrep crypt|cut -d _ -f 1| sed 's/[^a-zA-Z0-9]//g'|head -n 1);
		getSDA=$(blkid -t TYPE=crypto_LUKS|cut -d : -f 1|cut -d / -f 3|head -n 1);
		echo "";
		print_good "${cayn}From the output above your encrypted drive is:${reset}$getSDA${cayn} to verify just execute: ${reset}lsblk${cayn} or ${reset}getSDAblkid -t TYPE=crypto_LUKS";
		echo "";		
		#read -n 1 -s -r -p "${reset}Press any key to continue.....";
		#echo -e "\n"
		
		
		
	
		while true; do
			read -p "${cayn}Is the selected device ${reset}$getSDA${cayn} correct|Yes/No?  ${reset}" yn 
			echo;
			case $yn in
				[Yy]* ) break;;
				[Nn]* ) read -p "${cayn}Ok please type the correct device only the name without the path / and hit enter e.g. sda4 or sdb3 ..etc ${reset}";echo;getSDA=$REPLY;;
				* ) echo "${cayn}Please answer ${reset}yes ${cayn}or ${reset}no.";;
			esac
		done
			
		if !(lsblk|grep $getSDA > /dev/nul)
		then
			print_error "/dev/$getSDA you selected does not exist";
			exit 1;
		fi

		
				
				
		
		read -n 1 -s -r -p "${reset}Press any key to continue.....";
		echo -e "\n"
		if [[ -f $Myhome_path/Desktop/header-backup ]]
		then
			print_error "Found $Myhome_path/Desktop/header-backup please delete it first";
			exit 1;
		fi 
		
		
		if [[ -f $Myhome_path/Desktop/header-backup.enc ]]
		then
			print_error "Found $Myhome_path/Desktop/header-backup.enc please delete it first";
			exit 1;
		fi 
		
	
		
		if !(apt-mark showhold|grep cryptsetup-bin > /dev/null) 
		then
			print_good "${cayn}Ready to install custom crypto packages";
			read -n 1 -s -r -p "${reset}Press any key to continue.....";
			echo -e "\n";
			sudo dpkg -i nukeset/libcryptsetup*.deb
			sudo dpkg -i nukeset/cryptsetup*.deb
			sudo apt-mark hold cryptsetup-bin libcryptsetup12
			echo -e "\n";		
		fi
		
		
		sudo cryptsetup luksHeaderBackup /dev/$getSDA --header-backup-file $Myhome_path/Desktop/header-backup;
		print_good "${cayn}Now you will be asked for a password that will be used to encrypt or restore your header file in case you want to disable the nuke in future";
		read -n 1 -s -r -p "${reset}Press any key to continue.....";
		echo -e "\n";
		
		
		if(sudo openssl enc -aes-256-cbc -salt -in $Myhome_path/Desktop/header-backup -out $Myhome_path/Desktop/header-backup.enc)
		then   
			rm -f $Myhome_path/Desktop/header-backup;			
			sudo cp $Myhome_path/Desktop/header-backup.enc $Mykodachi_path/header-backup.enc;
			
			echo "${cayn}Your header backup file has been encrypted and saved in: $Myhome_path/Desktop/header-backup.enc copy it to a safe place you will need it if you need to restore the headers of your encrypted system"; 
			echo "";
			echo "${cayn}Another copy of your header backup file has been encrypted and saved in:$Mykodachi_path/header-backup.enc this file will be needed if you want to disable the nuke in the future";
			read -n 1 -s -r -p "${reset}Press any key to continue.....";
			echo -e "\n"
			print_good "${cayn}Now first you will be asked for a your normal $OS_name encryption password (The one you enter at bootup time) then you will be asked for the secret Nuke password that if you use it, it will trigger to destroy $OS_name if you are forced to reveal your data";
			echo "${reset}";
			read -n 1 -s -r -p "${reset}Press any key to continue.....";
			echo -e "\n"
			if(sudo cryptsetup luksAddNuke /dev/$getSDA)
			then 
				echo ""; 
				echo "${green}From now on during the boot up time you will use your normal password that you have setup on $OS_name installation process but if forced to open $OS_name then use the Nuke password you have just set and $OS_name will be destroyed !";
				echo "${reset}";
				read -n 1 -s -r -p "${reset}Press any key to continue.....";
				echo -e "\n"
				echo "If you will need to resotre the header file in future just run the following command:";
				echo "${cayn}sudo openssl enc -d -aes-256-cbc -in $Myhome_path/Desktop/header-backup.enc -out $Myhome_path/Desktop/header-backup";
				echo "${reset}Then run:";
				echo "${cayn}sudo cryptsetup luksHeaderRestore /dev/$getSDA --header-backup-file $Myhome_path/Desktop/header-backup";	
				notify-send -i $notifyIcon "$OS_name Nuke process completed";	
				# Save record for disabling
				echo -e "drive=$getSDA \nosisnuked=1" > $Mykodachi_path/osnukevars;
				sudo chown $LOGED_USER.$LOGED_USER $Mykodachi_path/osnukevars;
				exit 1;
			else			
				notify-send -i $notifyIcon "$OS_name Nuke process for: /dev/$getSDA failed";
				print_error "$OS_name Nuke process for: /dev/$getSDA failed";
				sudo apt-mark unhold cryptsetup-bin libcryptsetup12;
			fi
		else
			notify-send -i $notifyIcon "$OS_name header backup file encryption failed for: $Myhome_path/Desktop/header-backup";
			sudo apt-mark unhold cryptsetup-bin libcryptsetup12;
		fi
		exit 1;
	else
        print_error "$OS_name Nuke is for encrypted system only";
		notify-send -i $notifyIcon "$OS_name Nuke is for encrypted system only";
		exit 1;
	fi
else
	print_error "$OS_name Nuke is for installed system only";
	notify-send -i $notifyIcon "$OS_name Nuke is for installed system only";
	exit 1;

fi


 

exit 1;
